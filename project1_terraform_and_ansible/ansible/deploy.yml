---
- hosts: Webserver-With-Monitoring
  become: true
  tasks: 
    - name: Update and upgrade APT packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: true

    - name: Install required dependencies
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - git
          - virtualenv
        state: present

    - name: Clone Django URL Shortener project
      ansible.builtin.git:
        repo: https://github.com/saminmahmud/URL-Shortener.git
        dest: /home/ubuntu/url-shortener
        version: main
        depth: 1
        force: yes
      become: false
    
    # - name: Clone Django URL Shortener project
    #   ansible.builtin.git:
    #     repo: https://github.com/ianshulx/url-shortener.git
    #     dest: /home/ubuntu/url-shortener
    #     version: main
    #     accept_hostkey: yes

    - name: Create a virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /home/ubuntu/url-shortener/venv
        creates: /home/ubuntu/url-shortener/venv

    - name: Install required Python packages in virtual environment
      ansible.builtin.command:
        cmd: /home/ubuntu/url-shortener/venv/bin/pip install ansible six
        creates: /home/ubuntu/url-shortener/venv/bin/ansible
    
    - name: Install Python dependencies for project
      ansible.builtin.pip:
        requirements: /home/ubuntu/url-shortener/requirements.txt
        virtualenv: /home/ubuntu/url-shortener/venv
    
    - name: Install required python packages inside virtual environment
      ansible.builtin.pip:
        name:
          - ansible
          - six
        virtualenv: /home/ubuntu/url-shortener/venv
  
    - name: Ensure project directory exists
      ansible.builtin.file:
        path: /home/ubuntu/url-shortener
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '600'

    - name: Install and configure Nginx
      ansible.builtin.apt:
        name: nginx
        state: present
      notify: 
        - Start Nginx 
    
    - name: Start Nginx
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true

    - name: Configure Gunicorn service
      ansible.builtin.template:
        src: gunicorn.service.j2
        dest: /etc/systemd/system/gunicorn.service
        mode: '0644'
      notify: 
        - Restart Gunicorn

    - name: Start Gunicorn
      ansible.builtin.service:
        name: gunicorn
        state: started
        enabled: true

  handlers:
    - name: Restart Gunicorn
      ansible.builtin.systemd:
        name: gunicorn
        state: restarted

    - name: Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted


    


